// <auto-generated />
using BPA_Tracker.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BPA_Tracker.Migrations
{
    [DbContext(typeof(BPA_TrackerContext))]
    partial class BPA_TrackerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BPA_Tracker.Models.AssignEvent", b =>
                {
                    b.Property<int>("AssignEventID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EventID");

                    b.Property<int?>("InstructorID");

                    b.Property<int>("StudentID");

                    b.HasKey("AssignEventID");

                    b.HasIndex("EventID");

                    b.HasIndex("InstructorID");

                    b.HasIndex("StudentID");

                    b.ToTable("AssignEvent");
                });

            modelBuilder.Entity("BPA_Tracker.Models.AssignStudent", b =>
                {
                    b.Property<int>("AssignStudentID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("InstructorID");

                    b.Property<int>("StudentID");

                    b.HasKey("AssignStudentID");

                    b.HasIndex("InstructorID");

                    b.HasIndex("StudentID");

                    b.ToTable("AssignStudent");
                });

            modelBuilder.Entity("BPA_Tracker.Models.Event", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DateTime");

                    b.Property<string>("EventName");

                    b.Property<string>("Location");

                    b.HasKey("EventID");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("BPA_Tracker.Models.Instructor", b =>
                {
                    b.Property<int>("InstructorID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("InstructorID");

                    b.ToTable("Instructor");
                });

            modelBuilder.Entity("BPA_Tracker.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<int?>("InstructorID");

                    b.Property<string>("LastName");

                    b.Property<string>("ParentEmail");

                    b.Property<string>("ParentName");

                    b.Property<string>("ParentPhone");

                    b.Property<string>("StudentEmail");

                    b.Property<string>("StudentPhone");

                    b.HasKey("StudentID");

                    b.HasIndex("InstructorID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("BPA_Tracker.Models.AssignEvent", b =>
                {
                    b.HasOne("BPA_Tracker.Models.Event", "Event")
                        .WithMany("AssignEvents")
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BPA_Tracker.Models.Instructor")
                        .WithMany("AssignEvents")
                        .HasForeignKey("InstructorID");

                    b.HasOne("BPA_Tracker.Models.Student", "Student")
                        .WithMany("AssignEvents")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BPA_Tracker.Models.AssignStudent", b =>
                {
                    b.HasOne("BPA_Tracker.Models.Instructor", "Instructor")
                        .WithMany("AssignStudents")
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BPA_Tracker.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BPA_Tracker.Models.Student", b =>
                {
                    b.HasOne("BPA_Tracker.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorID");
                });
#pragma warning restore 612, 618
        }
    }
}
